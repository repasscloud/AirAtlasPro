@page "/"
@attribute [Authorize]
@inject IJSRuntime JSRuntime
@inject ISupportTicketService SupportTicketService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<PageTitle>@pageTitle</PageTitle>

<h2>@pageTitle</h2>

@if (showLogin)
{
    NavigateToLogin();
}

@code {
    private string pageTitle = "AirAtlasPro";

    private bool showLogin = true;

    private string Username = "Anonymous User";
    private string Picture = string.Empty;
    private bool? hasBillingRole;
    private bool? hasSupportRole;

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            Username = state?.User?.Identity?.Name ?? string.Empty;

            Picture = state?.User.Claims
                        .Where(c => c.Type.Equals("picture"))
                        .Select(c => c.Value)
                        .FirstOrDefault() ?? string.Empty;

            hasBillingRole = state?.User.IsInRole("Billing");
            hasSupportRole = state?.User.IsInRole("Support");

            if (!string.IsNullOrEmpty(state?.User?.Identity?.Name))
            {
                showLogin = false;
            }
        }
        await base.OnInitializedAsync();
    }

    // Redirect to login page if not already logged in
    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/login?redirectUri=/");
    }
}